<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 351293 Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->
<chapter xml:id="mysqli.overview" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

  <title>Краткий обзор</title>

  <para>
    Этот раздел посвящен описанию инструментов для взаимодействия PHP-приложений с
    базами данных MySQL.
  </para>

  <para>
    <emphasis role="bold">Что такое API?</emphasis>
  </para>

  <para>
    Интерфейс программирования приложений, или API, определяет набор классов,
    методов, функций и переменных, которые можно вызывать из вашего приложения
    для выполнения поставленных задач. Применительно к PHP приложениям, которые
    должны взаимодействовать с базами данных, необходимые для этого API, как
    правило, представлены PHP-расширениями.
  </para>

  <para>
    API могут быть процедурными или объектно-ориентированными. При использовании
    процедурных API вы вызываете функции для выполнения каких-либо операций, а
    в случае объектно-ориентированных вы инстанцируете классы и затем вызываете
    методы созданных объектов. Второй подход, обычно, предпочтительнее, так как
    он более современный и способствует написанию более организованного кода.
  </para>

  <para>
    API MySQL предоставляет несколько способов подключения к базе
    данных из PHP-приложения. В этом документе приводится описание этих способов
    и даются рекомендации, как выбрать наиболее подходящее решение в конкретной
    ситуации.
  </para>

  <para>
    <emphasis role="bold">Что такое коннектор?</emphasis>
  </para>

  <para>
    В документации MySQL термин <emphasis>коннектор (connector)</emphasis> относится к
    части программного обеспечения, отвечающей за подключение к серверу MySQL.
    MySQL предоставляет множество коннекторов для различных языков
    программирования, в частности для PHP.
  </para>

  <para>
    Для обеспечения взаимодействия PHP приложения с сервером баз данных вам
    необходимо написать PHP код, выполняющий подключение к серверу, выполнение
    запросов к базе данных и тому подобные операции. От программного обеспечения
    сервера требуется предоставить API, которое ваше PHP-приложение сможет
    использовать, а также функционал, ответственный за взаимодействие вашего
    приложения с сервером. Программное обеспечение, реализующее такой функционал,
    обычно называют коннектором, так как оно позволяет вашему приложению
    подключиться (<emphasis>to connect</emphasis>) к серверу баз данных. В ряде
    случаев коннектор для своих нужд может потребовать дополнительные библиотеки.
  </para>

  <para>
    <emphasis role="bold">Что такое драйвер?</emphasis>
  </para>

  <para>
    Драйвером называется часть программного обеспечения, отвечающая за
    взаимодействие приложения с конкретным типом серверов баз данных. Драйвер
    также может обращаться к внешним библиотекам, таким как клиентская библиотека
    MySQL или нативный драйвер MySQL. Эти библиотеки реализуют низкоуровневый
    протокол взаимодействия с сервером MySQL.
  </para>

  <para>
    В качестве примера можно привести уровень абстракции для работы с базами данных
    <link linkend="mysqli.overview.pdo">Объекты данных PHP (PDO)</link>, который
    может использовать один из нескольких драйверов, специфичных для конкретных
    баз данных. В качестве такого драйвера может выступать драйвер PDO MYSQL,
    который позволяет PDO взаимодействовать с MySQL-сервером.
  </para>

  <para>
    Иногда люди употребляют термины коннектор и драйвер, как синонимы, и это
    может сбить с толку. В документации MySQL термин <quote>драйвер</quote>
    означает участок программного кода, входящий в состав коннектора и отвечающий
    за связь с конкретной СУБД.
  </para>

  <para>
    <emphasis role="bold">Что такое расширение?</emphasis>
  </para>

  <para>
    В документации к PHP вы будете неоднократно сталкиваться с термином
    <emphasis>расширение</emphasis>. Код PHP как такового состоит из ядра и
    присоединенных к нему необязательных расширений, которые увеличивают круг
    задач, которые может выполнять ядро. Относящиеся к MySQL расширения, такие
    как <literal>mysqli</literal> и <literal>mysql</literal>, взаимодействуют с
    ядром с помощью фреймворка PHP расширений.
  </para>

  <para>
    Обычно расширения предоставляют свой API-интерфейс PHP-программисту, чтобы
    тот мог программно использовать возможности расширения. Однако, некоторые
    расширения, использующие фреймворк PHP-расширений, не предоставляют
    программистам никаких интерфейсов.
  </para>

  <para>
    Драйвер PDO MySQL, например, не предоставляет своего API. Он предоставляет
    интерфейс только абстрактному слою PDO, лежащему выше.
  </para>

  <para>
    Термины API и расширение нельзя воспринимать как синонимы, так как расширение
    может и не предоставлять API программисту.
  </para>

  <para>
    <emphasis role="bold">
     Какие инструменты для работы с MySQL предлагает API PHP?
    </emphasis>
  </para>

  <para>
    API предоставляет на выбор три набора инструментов для подключения к серверу
    баз данных MySQL:
  </para>

  <itemizedlist>

    <listitem>
      <para>
        Расширение PHP MySQL
      </para>
    </listitem>

    <listitem>
      <para>
        Расширение PHP mysqli
      </para>
    </listitem>

    <listitem>
      <para>
        Объекты данных PHP (PDO)
      </para>
    </listitem>

  </itemizedlist>

  <para>
    Каждый из них имеет свои достоинства и недостатки. Целью данного обзора
    является краткое описание ключевых особенностей каждого API.
  </para>

  <para>
    <emphasis role="bold">Что такое расширение PHP MySQL?</emphasis>
  </para>

  <para>
    Это оригинальное расширение позволяет разрабатывать PHP-приложения, которые
    могут взаимодействовать с базой данных MySQL. Расширение
    <literal>mysql</literal> предоставляет процедурный интерфейс и предназначено
    для использования с MySQL версии 4.1.3 или более ранними версиями. Его также можно использовать
    и с более свежими версиями СУБД, но в этом случае многие возможности сервера,
    появившиеся после версии 4.1.3, будут недоступны программисту.
  </para>

  <note>
    <para>
      Если вы работаете с сервером MySQL 4.1.3 или более поздних версий,
      <emphasis>настоятельно</emphasis> рекомендуется использовать
      расширение <literal>mysqli</literal>.
    </para>
  </note>

  <para>
    Исходные коды расширения <literal>mysql</literal> расположены в директории
    расширений PHP <filename>ext/mysql</filename>.
  </para>

  <para>
    Дополнительную информацию о расширении <literal>mysql</literal> можно
    почерпнуть из ресурса <xref linkend="book.mysql"/>.
  </para>

  <para>
    <emphasis role="bold">
     Что такое PHP-модуль mysqli?
    </emphasis>
  </para>

  <para>
    Модуль <literal>mysqli</literal>, или как его еще называют
    <emphasis>улучшенный (improved)</emphasis> модуль MySQL, был разработан,
    чтобы дать возможность программистам в полной мере воспользоваться
    функционалом MySQL-сервера версий 4.1.3 и выше. Модуль
    <literal>mysqli</literal> включается в поставку PHP версий 5 и выше.
  </para>

  <para>
    <literal>mysqli</literal> имеет ряд преимуществ и усовершенствований
    по сравнению с <literal>mysql</literal>, которые заключаются в следующем:

    <itemizedlist>

      <listitem>
        <para>
          Объектно-ориентированный интерфейс
        </para>
      </listitem>

      <listitem>
        <para>
          Поддержка подготавливаемых запросов
        </para>
      </listitem>

      <listitem>
        <para>
          Поддержка мультизапросов
        </para>
      </listitem>

      <listitem>
        <para>
          Поддержка транзакций
        </para>
      </listitem>

      <listitem>
        <para>
          Улучшенные возможности отладки
        </para>
      </listitem>

    </itemizedlist>
  </para>

  <note>
    <para>
      При работе с MySQL версий 4.1.3 и выше <emphasis>настоятельно</emphasis>
      рекомендуется использовать именно это расширение.
    </para>
  </note>

  <para>
    Наравне с объектно-ориентированным расширение предоставляет и процедурный
    интерфейс.
  </para>

  <para>
    Расширение <literal>mysqli</literal> собирается при помощи фреймворка
    расширений PHP, его исходный код расположен в директории
    <filename>ext/mysqli</filename>.
  </para>

  <para>
    За дополнительной информацией о расширении <literal>mysqli</literal>,
    обращайтесь к разделу <xref linkend="book.mysqli"/>.
  </para>

  <para xml:id="mysqli.overview.pdo">
    <emphasis role="bold">Что такое PDO?</emphasis>
  </para>

  <para>
    Объекты данных PHP, или PDO, представляют из себя абстракцию коннектора
    баз данных для PHP приложений. PDO предоставляет API интерфейс взаимодействия
    с базой данных, не зависящий от конкретной СУБД. Теоретически, при
    использовании PDO можно поменять сервер баз данных, например с Firebird
    на MySQL, и это приведет лишь к незначительным изменениям в PHP-коде.
  </para>

  <para>
    В качестве других подобных абстракций можно привести JDBC для Java-приложений
    и DBI для Perl.
  </para>

  <para>
    Наряду с преимуществами PDO, такими как простота и переносимость API, есть
    его главный недостаток: PDO поддерживает не все возможности сервера баз
    данных, доступные в последних версиях MySQL. Например, средствами PDO нельзя
    создавать множественные запросы, хотя MySQL их и поддерживает.
  </para>

  <para>
    PDO собирается при помощи фреймворка расширений PHP, его исходный код
    расположен в директории <filename>ext/pdo</filename>.
  </para>

  <para>
    Дополнительную информацию о PDO см. в разделе
    <xref linkend="book.pdo"/>.
  </para>

  <para>
    <emphasis role="bold">Что такое драйвер PDO MYSQL?</emphasis>
  </para>

  <para>
    Драйвер PDO MYSQL не является API как таковым, во всяком случае с точки зрения
    программиста. Драйвер PDO MYSQL располагается между самим PDO и сервером 
    MySQL. Программист вызывает функции интерфейса API PDO, а PDO в свою очередь
    использует драйвер PDO MYSQL для обмена данными и командами с сервером MySQL.
  </para>

  <para>
    Драйвер PDO MYSQL лишь один из многих PDO-драйверов. Для большинства СУБД есть
    свои PDO драйверы, как например драйверы для Firebird или PostgreSQL серверов.
  </para>

  <para>
    Драйвер PDO MYSQL собирается при помощи фреймворка расширений PHP, его исходный код
    расположен в директории <filename>ext/pdo_mysql</filename>. Он не предоставляет
    API-интерфейс программисту PHP.
  </para>

  <para>
    Дополнительно о драйвере PDO MYSQL можно прочитать в разделе
    <xref linkend="ref.pdo-mysql"/>.
  </para>

  <para xml:id="mysqli.overview.mysqlnd">
    <emphasis role="bold">Что такое нативный драйвер MySQL для PHP?</emphasis>
  </para>

  <para>
    Чтобы обеспечить взаимодействие с сервером MySQL, расширения
    <literal>mysql</literal> и <literal>mysqli</literal>, а также драйвер
    PDO MYSQL используют низкоуровневую библиотеку, в которой реализованы
    необходимые протоколы. В прошлом была доступна только одна такая библиотека:
    Клиентская библиотека MySQL (MySQL Client Library), также известная как
    <literal>libmysqlclient</literal>.
  </para>

  <para>
    Однако, интерфейс, который предоставляла <literal>libmysqlclient</literal>, не был
    оптимизирован для взаимодействия с PHP-приложениями, так как изначально
    <literal>libmysqlclient</literal> разрабатывалась для работы с С-приложениями.
    Несколько позже был разработан нативный драйвер MySQL (MySQL Native Driver)
    <literal>mysqlnd</literal>, который представляет собой альтернативу
    <literal>libmysqlclient</literal> для PHP.
  </para>

  <para>
    Каждое из расширений <literal>mysql</literal> или
    <literal>mysqli</literal>, а также драйвер PDO MySQL можно индивидуально
    настроить для работы либо с <literal>libmysqlclient</literal>, либо с
    <literal>mysqlnd</literal>. Так как <literal>mysqlnd</literal> создавался
    специально для PHP-систем, у него есть преимущество в скорости и расходах
    памяти перед <literal>libmysqlclient</literal>. Поэтому его использование
    предпочтительней.
  </para>

  <note>
    <para>
      Нативный драйвер MySQL может использоваться только с MySQL версии 4.1.3 и
      выше.
    </para>
  </note>

  <para>
    Нативный драйвер MYSQL собирается при помощи фреймворка расширений PHP, его
    исходный код расположен в директории <filename>ext/mysqlnd</filename>. Он
    не предоставляет API-интерфейс программисту PHP.
  </para>

<!-- TODO
  <para>
    For further information on the MySQL Native Driver, see
    <xref linkend="book.mysqlnd"/>.
  </para>
-->

  <para>
    <emphasis role="bold">Сравнение возможностей</emphasis>
  </para>

  <para>
    В приведенной таблице приводится сравнение функционала трех основных методов
    подключения к MySQL из PHP:
  </para>

  <table>
   <title>Сравнение опций MySQL API в PHP</title>
    <tgroup cols="4">
      <colspec colwidth="25*"/>
      <colspec colwidth="25*"/>
      <colspec colwidth="25*"/>
      <colspec colwidth="25*"/>
      <thead>
        <row>
          <entry></entry>
          <entry>Расширение PHP mysqli</entry>
          <entry>PDO (используя драйвер PDO MySQL и нативный драйвер MySQL)</entry>
          <entry>Расширение PHP MySQL</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry>Версия PHP, в которой был внедрен функционал</entry>
          <entry>5.0</entry>
          <entry>5.0</entry>
          <entry>До 3.0</entry>
        </row>
        <row>
          <entry>Включено в PHP 5.x</entry>
          <entry>Да</entry>
          <entry>Да</entry>
          <entry>Да</entry>
        </row>
        <row>
          <entry>Статус разработки MySQL</entry>
          <entry>Разработка продолжается</entry>
          <entry>Разработка продолжается по состоянию на PHP 5.3</entry>
          <entry>Только поддержка</entry>
        </row>
        <row>
          <entry>Рекомендовано MySQL для разработки новых проектов</entry>
          <entry>Да - отдается предпочтение</entry>
          <entry>Да</entry>
          <entry>Нет</entry>
        </row>
        <row>
          <entry>API поддерживает наборы символов</entry>
          <entry>Да</entry>
          <entry>Да</entry>
          <entry>Нет</entry>
        </row>
        <row>
          <entry>API поддерживает подготавливаемые запросы на стороне сервера</entry>
          <entry>Да</entry>
          <entry>Да</entry>
          <entry>Нет</entry>
        </row>
        <row>
          <entry>API поддерживает подготавливаемые запросы на стороне клиента</entry>
          <entry>Нет</entry>
          <entry>Да</entry>
          <entry>Нет</entry>
        </row>
        <row>
          <entry>API поддерживает хранимые процедуры</entry>
          <entry>Да</entry>
          <entry>Да</entry>
          <entry>Нет</entry>
        </row>
        <row>
          <entry>API поддерживает множественные запросы</entry>
          <entry>Да</entry>
          <entry>По большей части</entry>
          <entry>Нет</entry>
        </row>
        <row>
          <entry>Поддержка всего функционала MySQL 4.1+</entry>
          <entry>Да</entry>
          <entry>По большей части</entry>
          <entry>Нет</entry>
        </row>
      </tbody>
    </tgroup>
  </table>
<!--
  <para>
    <emphasis role="bold">Further information</emphasis>
  </para>

  <para>
    The PHP distribution and documentation are available from the
    <link xlink:href="http://www.php.net/">PHP Web site</link>.
  </para>
-->
</chapter>
