<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongo.switchslave" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Mongo::switchSlave</refname>
  <refpurpose>Выбирает новый вторичный сервер для чтения slaveOkay</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>string</type><methodname>Mongo::switchSlave</methodname>
   <void/>
  </methodsynopsis>

  <para>
   Выбирает случайный вторичный сервер для соединения для чтения. 
   Он вызывается драйвером автоматически и не должен использоваться. 
   Он вызывает <function>MongoClient::getHosts</function> (для обновления статуса хостов) 
   и <function>Mongo::getSlave</function> (для получения возвращаемого значения).
  </para>

  <para>
   Смотрите <link linkend="mongo.queries">раздел про запросы</link> руководства 
   для получения информации о распределении чтений среди вторичных серверов.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Адрес вторичного сервера, который использует это соединение для чтения. 
   Он может совпадать с предыдущим адресом, поскольку адреса выбираются случайным образом. 
   Он может возвращать только один адрес, если доступен только один дополнительный (или только основной).
  </para>
  <para>
   Например, если бы у нас была реплика из трех элементов с основным, вторичным и арбитром, 
   этот метод всегда возвращал бы адрес вторичного сервера. 
   Если вторичный сервер становится недоступным, этот метод всегда вернет адрес основного. 
   Если основной также становится недоступным, этот метод выдаст исключение, 
   так как арбитр не может обрабатывать чтения.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдает исключение <classname>MongoException</classname> (код ошибки 15), 
   если оно вызывается для соединения, не связанного с репликой. 
   Он также выдаст исключение <classname>MongoException</classname>, 
   если не найдет ни одного (основного или дополнительного) сервера для чтения (код ошибки 16).
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.2.11</entry>
       <entry>Выдает <constant>E_DEPRECATED</constant>, при использовании.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <simplelist>
   <member><xref linkend="mongo.readpreferences" /></member>
  </simplelist>
 </refsect1><!-- }}} -->


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
