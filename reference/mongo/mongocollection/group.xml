<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.group" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::group</refname>
  <refpurpose>Выполняет операцию, аналогичную команде SQL GROUP BY</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCollection::group</methodname>
   <methodparam><type>mixed</type><parameter>keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>initial</parameter></methodparam>
   <methodparam><type>MongoCode</type><parameter>reduce</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;  
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Поля для группировки. Если передан массив или объект без кода, 
       это будет ключ, используемый для группировки результатов.
      </para>
      <para>
       1.0.4+: Если <parameter>keys</parameter> является 
       экземпляром <classname>MongoCode</classname>, 
       <parameter>keys</parameter> будут обрабатываться как функция, 
       которая возвращает ключ для группировки (смотрите пример "Передача 
       функции <parameter>keys</parameter>" ниже).
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>initial</parameter>
     </term>
     <listitem>
      <para>
       Начальное значение объекта счетчика агрегации.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>reduce</parameter>
     </term>
     <listitem>
      <para>
       Функция, которая принимает два аргумента 
       (текущий документ и агрегацию на данный момент) и выполняет агрегацию.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Необязательные параметры для групповой команды. Допустимые варианты:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         <literal>"condition"</literal>
        </para>
        <para>
         Критерии включения документа в агрегацию.
        </para>
       </listitem>
       <listitem>
        <para>
         <literal>"finalize"</literal>
        </para>
        <para>
         Функция вызывается один раз для каждой уникальной клавиши, 
         которая принимает окончательный результат функции reduce.
        </para>
       </listitem>
       &mongo.command.parameters.maxtimems;
      </itemizedlist>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает массив, содержащий результат.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>Добавлена опция <literal>"maxTimeMS"</literal>.</entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.11</entry>
       <entry>
        Выдает <constant>E_DEPRECATED</constant>, когда используется
        <parameter>options</parameter>, как <type>scalar</type>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCollection::group</function></title>
   <para>
    Группирует документы по категориям и создает список имен в этой категории.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("category" => "fruit", "name" => "apple"));
$collection->insert(array("category" => "fruit", "name" => "peach"));
$collection->insert(array("category" => "fruit", "name" => "banana"));
$collection->insert(array("category" => "veggie", "name" => "corn"));
$collection->insert(array("category" => "veggie", "name" => "broccoli"));

$keys = array("category" => 1);

$initial = array("items" => array());

$reduce = "function (obj, prev) { prev.items.push(obj.name); }";

$g = $collection->group($keys, $initial, $reduce);

echo json_encode($g['retval']);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
[{"category":"fruit","items":["apple","peach","banana"]},{"category":"veggie","items":["corn","broccoli"]}]
]]>
   </screen>
  </example>

  <example>
   <title>Пример использования <function>MongoCollection::group</function></title>
   <para>
    Этот пример не использует никаких ключей, поэтому каждый документ будет 
    иметь свою собственную группу. Он также использует условие: только те документы, 
    которые соответствуют этому условию, будут обрабатываться функцией группировки.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->save(array("a" => 2));
$collection->save(array("b" => 5));
$collection->save(array("a" => 1));

// используем все поля
$keys = array();

// устанавливаем начальные значения
$initial = array("count" => 0);

// функция JavaScript для выполнения
$reduce = "function (obj, prev) { prev.count++; }";

// используем только те документы, у которых поле "а" больше 1
$condition = array('condition' => array("a" => array( '$gt' => 1)));

$g = $collection->group($keys, $initial, $reduce, $condition);

var_dump($g);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(4) {
  ["retval"]=>
  array(1) {
    [0]=>
    array(1) {
      ["count"]=>
      float(1)
    }
  }
  ["count"]=>
  float(1)
  ["keys"]=>
  int(1)
  ["ok"]=>
  float(1)
}
]]>
   </screen>
  </example>

  <example>
   <title>Передача функции <parameter>keys</parameter></title>
   <para>
    Если вы хотите сгруппировать по чему-то отличному от имен полей, 
    вы можете передать функцию в качестве первого параметра 
    <function>MongoCollection::group</function>, и она будет выполняться 
    для каждого документа. Возвращаемое значение функции будет использоваться 
    в качестве значения группировки.
   </para>
   <para>
    Этот пример демонстрирует группирование по числовому полю по модулю 4.
   </para>

   <programlisting role="php">
<![CDATA[
<?php

$c->group(new MongoCode('function(doc) { return {mod : doc.num % 4}; }'),
     array("count" => 0),
     new MongoCode('function(current, total) { total.count++; }'));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
