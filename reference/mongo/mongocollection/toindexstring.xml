<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.toindexstring" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::toIndexString</refname>
  <refpurpose>Преобразует ключи, указывающие индекс, в его идентифицирующую строку</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>static protected</modifier> <type>string</type><methodname>MongoCollection::toIndexString</methodname>
   <methodparam><type>mixed</type><parameter>keys</parameter></methodparam>
  </methodsynopsis>
  <warning>
   <para>
    Этот метод устарел с версии 1.5.0.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;  
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Поле или поля для преобразования в идентифицирующую строку
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает строку, которая описывает индекс.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCollection::toIndexString</function></title>
   <para>
    Этот пример показывает, как вы можете создать индексное имя из ключей.
    Поскольку это защищенный (статичный) метод, вам нужно сначала перегрузить его в дочернем классе.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
// Создаем унаследованный класс, чтобы сделать метод "public".
class MyCollection extends MongoCollection
{
    static public function toIndexString($a)
    {
        return parent::toIndexString($a);
    }
}

echo MyCollection::toIndexString("foo"), "\n";
// Выведет: foo_1

echo MyCollection::toIndexString(array('name' => 1, 'age' => -1)), "\n";
// Выведет: name_1_age_-1
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Основные документы MongoDB по <link xlink:href="&url.mongodb.dochub.indexes;">инлексам</link>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>
        Этот метод устарел.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
