<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351075 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.save" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::save</refname>
  <refpurpose>Сохраняет документ в коллекцию</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>MongoCollection::save</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter>document</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Если объект из базы данных, обновляет существующий объект базы данных, 
   в противном случае добавояет этот объект.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>document</parameter>
     </term>
     <listitem>
      <para>
       Массив или объект для сохранения. 
       Если объект используется, он может не иметь защищенных или закрытых свойств.
      </para>
      <note>
       <para>
        Если у параметра нет ключа или свойства <literal>_id</literal>, 
        будет создан новый экземпляр <classname>MongoId</classname> и назначен ему. 
        Посмотрите <function>MongoCollection::insert</function> 
        для получения дополнительной информации об этом поведении.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Параметры для сохранения.
       <itemizedlist>
        &mongo.writes.parameters.fsync;
        &mongo.writes.parameters.journal;
        &mongo.writes.parameters.sockettimeoutms;
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeout;
        &mongo.writes.parameters.writeconcerntimeoutms;
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Если <parameter>w</parameter> был установлен, возвращает массив, 
   содержащий состояние сохранения. В противном случае возвращает логическое значение, 
   представляющее, если массив не был пустым (пустой массив не будет вставлен).
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдает исключение <classname>MongoException</classname>, 
   если вставленный документ пуст или содержит ключи нулевой длины. 
   Попытка вставить объект с защищенными и закрытыми свойствами приведет 
   к ошибке ключа нулевой длины.
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>
        <para>
         Добавлена опция <literal>"wTimeoutMS"</literal>, 
         которая заменяет <literal>"wtimeout"</literal>. 
         Выдает <constant>E_DEPRECATED</constant>, 
         когда используется <literal>"wtimeout"</literal>.
        </para>
        <para>
         Добавлена опция <literal>"socketTimeoutMS"</literal>, 
         которая заменяет <literal>"timeout"</literal>. 
         Выдает <constant>E_DEPRECATED</constant>, 
         когда используется <literal>"timeout"</literal>.
        </para>
        <para>
         Выдает <constant>E_DEPRECATED</constant>, 
         когда используется <literal>"safe"</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.0</entry>
       <entry>Добавлена опция <literal>"timeout"</literal>.</entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.11</entry>
       <entry>
        Отключается при ошибках "not master", если установлен <literal>"safe"</literal>.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.9</entry>
       <entry>
        <para>
         Добавлена опция <literal>"fsync"</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.5</entry>
       <entry>Добавлен параметр <parameter>options</parameter>.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCollection::save</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$obj = array('x' => 1);

// вставляем $obj в БД
$collection->save($obj);
var_dump($obj);

// добавляем другое поле
$obj['foo'] = 'bar';

// $obj не может быть вставлен снова, вызывает ошибку дубликата _id
$collection->insert($obj);

// сохраняем обновления $obj с новым полем
$collection->save($obj);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["x"]=>
  int(1)
  ["_id"]=>
  object(MongoId)#4 (1) {
    ["$id"]=>
    string(24) "50b6afe544415ed606000000"
  }
}
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
