<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.insert" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::insert</refname>
  <refpurpose>Вставляет документ в коллекцию</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool|array</type><methodname>MongoCollection::insert</methodname>
   <methodparam><type>array|object</type><parameter>document</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Все строки, отправляемые в базу данных, должны быть в формате UTF-8. 
   Если строка не UTF-8, будет выдано исключение <classname>MongoException</classname>. 
   Чтобы вставить (или запросить) строку не-UTF-8, используйте <classname>MongoBinData</classname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>document</parameter>
     </term>
     <listitem>
      <para>
       Массив или объект. Если используется объект, 
       он может не иметь защищенных или закрытых свойств.
      </para>
      <note>
       <para>
        Если у параметра нет ключа или свойства <literal>_id</literal>, 
        будет создан новый экземпляр <classname>MongoId</classname> и назначен ему. 
        Это специальное поведение не означает, что параметр передается по ссылке.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Массив опций для операции вставки. 
       В настоящее время доступны следующие варианты:
       <itemizedlist>
        &mongo.writes.parameters.fsync;
        &mongo.writes.parameters.journal;
        &mongo.writes.parameters.sockettimeoutms;
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeoutms;
       </itemizedlist>
      </para>
      <para>
       Следующие параметры устарели и больше не должны использоваться:
       <itemizedlist>
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.writeconcerntimeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает массив, содержащий состояние вставки, 
   если установлена опция <literal>"w"</literal>. В противном случае возвращает &true;, 
   если вставленный массив не пустой (исключение <classname>MongoException</classname> 
   будет выдано, если вставленный массив пуст).
  </para>
  <para>
   Если возвращается массив, могут присутствовать следующие ключи:
   <variablelist>
    <varlistentry>
     <term>
      <parameter>ok</parameter>
     </term>
     <listitem>
      <para>
       Это почти всегда будет 1 (если не произошел сбой самого last_error).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>err</parameter>
     </term>
     <listitem>
      <para>
       Если это поле не null, произошла ошибка в предыдущей операции. 
       Если это поле установлено, это будет строка, описывающая возникшую ошибку.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>code</parameter>
     </term>
     <listitem>
      <para>
       Если произошла ошибка базы данных, 
       соответствующий код ошибки будет передан обратно клиенту.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>errmsg</parameter>
     </term>
     <listitem>
      <para>
       Это поле устанавливается, если что-то идет не так с командой базы данных. 
       Это связано с тем, что <literal>ok</literal> равно 0. 
       Например, если <literal>w</literal> установлено и время ожидания истекло, 
       для errmsg будет установлено значение «превышено время ожидания подчиненных устройств», 
       и значение <literal>ok</literal> будет равно 0. 
       Если это поле установлено, оно будет строкой, описывающей произошла ошибка. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>n</parameter>
     </term>
     <listitem>
      <para>
       Если последней операцией было обновление, удаление или удаление, 
       будет возвращено количество затронутых документов. 
       Для операций вставки это значение всегда равно <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>wtimeout</parameter>
     </term>
     <listitem>
      <para>
       Если для предыдущего варианта истекло время ожидания репликации.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>waited</parameter>
     </term>
     <listitem>
      <para>
       Сколько времени операция ожидала до истечения времени ожидания.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>wtime</parameter>
     </term>
     <listitem>
      <para>
       Если <literal>w</literal> был установлен и операция прошла успешно, 
       сколько времени потребовалось для репликации на <literal>w</literal> серверов.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>upserted</parameter>
     </term>
     <listitem>
      <para>
       Если произошел сбой, это поле будет содержать поле <literal>_id</literal> новой записи. 
       Для слияния будет присутствовать это поле или 
       <literal>updatedExisting</literal> (если ошибка не произошла).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>updatedExisting</parameter>
     </term>
     <listitem>
      <para>
       Если слияние обновило существующий элемент, это поле будет истинным. 
       Для слияния будет присутствовать это поле или upserted (если ошибка не произошла).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдает исключение <classname>MongoException</classname>, 
   если вставленный документ пуст или содержит ключи нулевой длины. 
   Попытка вставить объект с защищенными и закрытыми свойствами приведет 
   к ошибке ключа нулевой длины.
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>
        <para>
         Добавлена опция <literal>"wTimeoutMS"</literal>, которая заменяет 
         <literal>"wtimeout"</literal>. Выдает <constant>E_DEPRECATED</constant>, 
         когда используется <literal>"wtimeout"</literal>.
        </para>
        <para>
         Добавлена опция <literal>"socketTimeoutMS"</literal>, которая заменяет 
         <literal>"timeout"</literal>. Выдает <constant>E_DEPRECATED</constant>, 
         когда используется <literal>"timeout"</literal>.
        </para>
        <para>
         Выдает <constant>E_DEPRECATED</constant>, 
         когда используется <literal>"safe"</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.3.4</entry>
       <entry>Добавлена опция <literal>"wtimeout"</literal>.</entry>
      </row>
      <row>
       <entry>PECL mongo 1.3.0</entry>
       <entry>
        <para>Добавлена опция <literal>"w"</literal> option.</para>
        <para>
         Параметр <parameter>options</parameter> больше не принимает логическое значение 
         для обозначения подтвержденной записи. Вместо этого теперь это должно быть сделано 
         с <literal>array('w' => 1)</literal> (поведение 
         по умолчанию <classname>MongoClient</classname>).
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.0</entry>
       <entry>Добавлена опция <literal>"timeout"</literal>.</entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.11</entry>
       <entry>
        Отключается при ошибках "not master", если установлен <literal>"safe"</literal>.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.9</entry>
       <entry>
        <para>
         Добавлена возможность передавать целые числа в опцию <literal>"safe"</literal>, 
         которая ранее принимала только логические значения.
        </para>
        <para>
         Добавлена опция <literal>"fsync"</literal>.
        </para>
        <para>
         Тип возвращаемого значения был изменен на массив, содержащий информацию об ошибке, 
         если используется параметр <literal>"safe"</literal>. 
         В противном случае логическое значение возвращается, как и раньше.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.2</entry>
       <entry>
        Изменен второй параметр, чтобы он был массивом опций. 
        До версии 1.0.2 вторым параметром был логический параметр, 
        указывающий <literal>"safe"</literal> параметр.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.1</entry>
       <entry>
        Выдает исключение <classname>MongoCursorException</classname>, 
        если установлена опция <literal>"safe"</literal> и вставка завершается неудачно.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCollection::insert</function> <literal>_id</literal></title>
   <para>
    Поле <literal>_id</literal> будет добавлено во вставленный документ, если его еще нет. 
    В зависимости от того, как передан параметр, сгенерированный <literal>_id</literal> 
    может быть или не быть доступен для вызывающего кода.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient();
$collection = $m->selectCollection('test', 'phpmanual');

// Если используется литерал массива, то нет доступа к сгенерированному _id
$collection->insert(array('x' => 1));

// _id доступен для массива, переданного по значению
$a = array('x' => 2);
$collection->insert($a);
var_dump($a);

// _id недоступен для массива, переданного по ссылке
$b = array('x' => 3);
$ref = &$b;
$collection->insert($ref);
var_dump($ref);

// _id доступен, если функция переноса не запускает копирование при записи
function insert_no_cow($collection, $document)
{
    $collection->insert($document);
}

$c = array('x' => 4);
insert_no_cow($collection, $c);
var_dump($c);

// _id недоступен, если функция переноса запускает копирование при записи
function insert_cow($collection, $document)
{
    $document['y'] = 1;
    $collection->insert($document);
}

$d = array('x' => 5);
insert_cow($collection, $d);
var_dump($d);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["x"]=>
  int(2)
  ["_id"]=>
  object(MongoId)#4 (0) {
  }
}
array(1) {
  ["x"]=>
  int(3)
}
array(2) {
  ["x"]=>
  int(4)
  ["_id"]=>
  object(MongoId)#5 (0) {
  }
}
array(1) {
  ["x"]=>
  int(5)
}
]]>
   </screen>
  </example>

  <example>
   <title>Пример использования <function>MongoCollection::insert</function> c подтверждением записи</title>
   <para>
    В этом примере показана вставка двух элементов с одинаковым _id, 
    которое вызовет исключение <classname>MongoCursorException</classname>, 
    которое было задано для <parameter>w</parameter>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$person = array("name" => "Joe", "age" => 20);
$collection->insert($person);

// теперь $person имеет поле _id, поэтому, 
// если мы сохраним его снова, мы получим исключение
try {
    $collection->insert($person, array("w" => 1));
} catch(MongoCursorException $e) {
    echo "Не могу сохранить того же человека дважды!\n";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::batchInsert</function></member>
   <member><function>MongoCollection::update</function></member>
   <member><function>MongoCollection::find</function></member>
   <member><function>MongoCollection::remove</function></member>
   <member>Основные документы MongoDB по <link xlink:href="&url.mongodb.dochub.insert;">вставке</link>.</member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
