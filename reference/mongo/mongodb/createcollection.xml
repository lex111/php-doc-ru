<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongodb.createcollection" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB::createCollection</refname>
  <refpurpose>Создает коллекцию</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCollection</type><methodname>MongoDB::createCollection</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   Этот метод используется для создания ограниченных коллекций и других коллекций, 
   требующих специальных параметров. Это идентично выполнению:
   <programlisting role="php">
<![CDATA[
<?php

$collection = $db->command(array(
    "create" => $name,
    "capped" => $options["capped"],
    "size" => $options["size"],
    "max" => $options["max"],
    "autoIndexId" => $options["autoIndexId"],
));

?>
]]>
   </programlisting>
   Смотрите <function>MongoDB::command</function> для получения дополнительной информации о командах базы данных.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;

  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>name</parameter>
     </term>
     <listitem>
      <para>
       Название коллекции.
      </para>
     </listitem>
    </varlistentry>   

    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Массив, содержащий опции для коллекций. Каждый параметр является собственным 
       элементом в массиве параметров, а имя параметра, указанное ниже, является 
       ключом элемента. Поддерживаемые параметры зависят от версии сервера MongoDB 
       и механизма хранения, и драйвер принимает любой параметр, 
       который вы передаете, прямо на сервер. Вот некоторые из поддерживаемых опций, 
       но вы можете найти полный список в основных документах MongoDB на <link
       xlink:href="&url.mongodb.docs;method/db.createCollection/">createCollection</link>:
      </para>
      <para>
       <variablelist>
        <varlistentry>
         <term>
          <parameter>capped</parameter>
         </term>
         <listitem>
          <para>
           Если коллекция должна быть фиксированного размера.
          </para>
         </listitem>
        </varlistentry>   
        <varlistentry>
         <term>
          <parameter>size</parameter>
         </term>
         <listitem>
          <para>
           Если коллекция имеет фиксированный размер, ее размер в байтах.
          </para>
         </listitem>
        </varlistentry>   
        <varlistentry>
         <term>
          <parameter>max</parameter>
         </term>
         <listitem>
          <para>
           Если коллекция имеет фиксированный размер, максимальное количество элементов 
           для хранения в коллекции.
          </para>
         </listitem>
        </varlistentry>   
        <varlistentry>
         <term>
          <parameter>autoIndexId</parameter>
         </term>
         <listitem>
          <para>
           Если значение capped равно &true;, вы можете указать &false;, чтобы отключить 
           автоматический индекс, созданный в поле <literal>_id</literal>. 
           До MongoDB 2.2 значением по умолчанию для 
           <literal>autoIndexId</literal> было &false;.
          </para>
         </listitem>
        </varlistentry>   
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает объект коллекции, представляющий новую коллекцию.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoDB::createCollection</function> ограниченной коллекции</title>
   <para>
    Ограниченная коллекция - это особый тип коллекции, который имеет фиксированный размер 
    или фиксированное количество элементов. Как только коллекция "заполнится", самые старые 
    элементы будут удалены при добавлении новых элементов. Ограниченные коллекции 
    могут быть очень полезны для приложений, таких как ведение журналов, где вы можете 
    зарезервировать определенное количество места для журналов и не беспокоиться о том, что они 
    станут слишком большими.
   </para>
   <para>
    В этом примере создается очень маленькая коллекция журналов, в которой будет храниться 
    не более 10 документов.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$log = $db->createCollection(
    "logger",
    array(
        'capped' => true,
        'size' => 10*1024,
        'max' => 10
    )
);

for ($i = 0; $i < 100; $i++) {
    $log->insert(array("level" => WARN, "msg" => "пример сообщения журнала #$i", "ts" => new MongoDate()));
}

$msgs = $log->find();

foreach ($msgs as $msg) {
    echo $msg['msg']."\n";
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
пример сообщения журнала #90
пример сообщения журнала #91
пример сообщения журнала #92
пример сообщения журнала #93
пример сообщения журнала #94
пример сообщения журнала #95
пример сообщения журнала #96
пример сообщения журнала #97
пример сообщения журнала #98
пример сообщения журнала #99
   </screen>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.4.0</entry>
       <entry>
        <para>
         В версиях до 1.4.0 все параметры были аргументами метода. 
         Синопсис функций в этих старых версиях:
        </para>
        <para>
         <methodsynopsis>
          <modifier>public</modifier> <type>MongoCollection</type><methodname>MongoDB::createCollection</methodname>
          <methodparam><type>string</type><parameter>name</parameter></methodparam>
          <methodparam choice="opt"><type>bool</type><parameter>capped</parameter><initializer>&false;</initializer></methodparam>
          <methodparam choice="opt"><type>int</type><parameter>size</parameter><initializer>0</initializer></methodparam>
          <methodparam choice="opt"><type>int</type><parameter>max</parameter><initializer>0</initializer></methodparam>
         </methodsynopsis>
        </para>
        <para>
         Значение параметров такое же, как описано выше 
         в аргументе <parameter>options</parameter>.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
