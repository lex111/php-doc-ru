<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351075 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongoclient.killcursor" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoClient::killCursor</refname>
  <refpurpose>Разрушает определенный курсор на сервере</refpurpose>
 </refnamediv>

 <refsynopsisdiv role="soft-deprecation-notice">
  &mongo.noalternative.method.note;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoClient::killCursor</methodname>
   <methodparam><type>string</type><parameter>server_hash</parameter></methodparam>
   <methodparam><type class="union"><type>int</type><type>MongoInt64</type></type><parameter>id</parameter></methodparam>
  </methodsynopsis>
  <para>
   В определенных ситуациях может потребоваться разрушить курсор на сервере. 
   Обычно время ожидания курсора истекает после 10 минут бездействия, 
   но возможно создать вечный курсор с <methodname>MongoCursor::immortal</methodname>, 
   который никогда не истекает. 
   Чтобы иметь возможность разрушить такой вечный курсор, 
   вы можете вызвать этот метод с информацией, предоставленной <methodname>MongoCursor::info</methodname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>server_hash</parameter>
     </term>
     <listitem>
      <para>
       Хеш сервера с курсором. Может быть получено через 
       <methodname>MongoCursor::info</methodname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>id</parameter>
     </term>
     <listitem>
      <para>
       Идентификатор курсора для разрушения. 
       Вы можете предоставить либо <type>int</type>, содержащий 64-битный идентификатор курсора, 
       либо объект класса <classname>MongoInt64</classname>. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true;, если метод пытался разрушить курсор, и &false;, 
   если с аргументами было что-то не так (например, неправильный <parameter>server_hash</parameter>). 
   Статус возврата <emphasis>не отражает</emphasis>, где курсор был фактически разрушен, поскольку сервер не предоставляет эту информацию.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Метод отображает предупреждение, если предоставленный <parameter>server_hash</parameter> 
   не совпадает с существующим соединением. В этом случае также не предпринимаются попытки разрушить курсор.
  </para>
 </refsect1>

 <refsect1 role="examples" xml:id="mongo.mongoclient.killcursor.examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoClient::killCursor</function></title>
   <para>
    В этом примере показано, как подключиться, выполнить запрос, 
    получить информацию о курсоре и затем разрушить его.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$m = new MongoClient();
$c = $m->testdb->collection;
$cursor = $c->find();
$result = $cursor->next();

// Теперь курсор корректен, поэтому мы можем получить хеш и идентификатор:
$info = $cursor->info();

// Разрушаем курсор
MongoClient::killCursor( $info['server'], $info['id'] );
?>
]]>
   </programlisting>
  </example>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
