<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.batchsize" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::batchSize</refname>
  <refpurpose>Ограничивает количество элементов, возвращаемых в одном пакете</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::batchSize</methodname>
   <methodparam><type>int</type><parameter>batchSize</parameter></methodparam>
  </methodsynopsis>
  <para>
   Курсор обычно выбирает пакет объектов результатов и сохраняет их локально. 
   Этот метод устанавливает значение batchSize для настройки количества документов, 
   полученных с сервера за один раз. Однако он никогда не вернет больше документов, 
   чем умещается в максимальном размере пакета (обычно 4 МБ).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;  
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>batchSize</parameter>
     </term>
     <listitem>
      <para>
       Количество результатов, возвращаемых на пакет. 
       Каждая партия требует отправки на сервер в оба конца.
      </para>
      <para>
       Если <parameter>batchSize</parameter> равен <emphasis>2 или более</emphasis>, 
       он представляет размер каждой партии извлеченных объектов. 
       Его можно настроить для оптимизации производительности и ограничения передачи данных.
      </para>
      <para>
       Если <parameter>batchSize</parameter> равен <literal>1</literal> 
       или отрицательному значению, он ограничит количество возвращаемых документов 
       абсолютным значением batchSize, и курсор будет закрыт. 
       Например, если batchSize равен <literal>-10</literal>, сервер вернет максимум 
       10 документов и столько, сколько может уместиться в 4 МБ, затем закроет курсор.
      </para>
      <warning>
       <para>
        Значение <parameter>batchSize</parameter>, равное <literal>1</literal>, 
        является специальным и означает то же самое, что и <literal>-1</literal>, 
        т.е. значение <literal>1</literal> делает курсор способным вернуть только <emphasis>один</emphasis> документ.
       </para>
      </warning>
      <para>
       Обратите внимание, что эта функция отличается от 
       <function>MongoCursor::limit</function> тем, что документы должны 
       соответствовать максимальному размеру, и устраняет необходимость отправлять запрос 
       на закрытие курсора на стороне сервера. Размер пакета может быть изменен даже 
       после итерации курсора, и в этом случае настройка будет применяться 
       при следующем получении пакета.
      </para>
      <para>
       Это не может переопределить ограничение MongoDB на объем данных, 
       которые он возвращает клиенту (т.е. если вы установите размер пакета в 1 000 000 000, 
       MongoDB все равно будет возвращать только 4-16 МБ результатов на пакет).
      </para>
      <para>
       Чтобы обеспечить согласованное поведение, правила 
       <function>MongoCursor::batchSize</function> и 
       <function>MongoCursor::limit</function> ведут себя немного сложнее, 
       но работают "как положено". Правила таковы: 
       жесткие ограничения переопределяют мягкие ограничения, 
       причем <function>MongoCursor::limit</function> отдается предпочтение 
       над <function>MongoCursor::batchSize</function>. 
       После этого, тот лимит, который установлен ниже, чем другой, будет приоритетнее. 
       Смотрите ниже раздел с примерами.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Возвращает курсор.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCursor::batchSize</function> в комбинации с
   <function>MongoCursor::limit</function></title>
   <programlisting role="php">
<![CDATA[
<?php

// один пакет, максимум 10 штук. -10 заставит сервер 
// вернуть 10 элементов, а затем убрать курсор.
$cursor->limit(20)->batchSize(-10);

// первая партия: не более 10 товаров
$cursor->limit(10);

// первая партия: не более 10 товаров
$cursor->limit(10)->batchSize(20);

// результаты извлекаются партиями по 10 штук в каждой, 
// максимум возвращается 20 товаров (это означает две партии по 10 штук).
$cursor->limit(20)->batchSize(10);

// результаты извлекаются партиями по 7 штук в каждой, 
// максимум возвращается 30 элементов (это означает, что драйвер запрашивает 
// 4 партии по 7 и одну партию из 2).
$cursor->limit(30)->batchSize(7)
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Документация MongoDB по <link xlink:href="&url.mongodb.dochub.batchsize;">batchSize</link>.
  </para>
  <para>
   <simplelist>
    <member><function>MongoCursor::limit</function></member>
    <member><methodname>MongoCursorInterface::batchSize</methodname></member>
   </simplelist>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.4.5</entry>
       <entry>
        <para>
         До версии 1.4.5 этот метод генерировал исключение 
         <classname>MongoCursorException</classname>, 
         если курсор уже начал итерацию.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
