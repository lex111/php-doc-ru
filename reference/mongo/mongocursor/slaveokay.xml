<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.slaveokay" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::slaveOkay</refname>
  <refpurpose>Устанавливает, может ли этот запрос быть выполнен на вторичном сервере [устарел]</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::slaveOkay</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>okay</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <warning>
   <para>
    Этот метод устарел с версии 1.5.0. Вместо этого, пожалуйста, используйте 
    <methodname>MongoCursor::setReadPreference</methodname> и 
    <xref linkend="mongo.readpreferences" />.
   </para>
  </warning>
  <para>
   Использование этого вызовет чтение маршрута драйвера для вторичных серверов, если:
   <itemizedlist>
    <listitem>
     <simpara>
      Вы используете набор реплик, и
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Вы создали экземпляр <classname>MongoClient</classname>, используя опцию 
      <literal>"replicaSet" => "setName"</literal>, и
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Существует рабочий вторичный сервер, который может быть достигнут драйвером.
     </simpara>
    </listitem>
   </itemizedlist>
   Вы можете проверить, какой сервер использовался для этого запроса, вызвав 
   <function>MongoCursor::info</function> после выполнения запроса. Поле 
   <literal>server</literal> покажет, на какой сервер был отправлен запрос.
  </para>
  <para>
   Обратите внимание, что вы должны использовать эту функцию, даже если вы не используете автоматическую 
   маршрутизацию к вторичным серверам. Если вы подключаетесь напрямую к вторичному серверу в наборе реплик, 
   вам все равно нужно вызвать эту функцию, которая в основном сообщает базе данных, 
   что вы знаете, что вы можете получать более старые данные, и с этим все в порядке. 
   Если вы не выполните это, вы получите ошибку "not master" при попытке запроса.
  </para>
  <para>
   Этот метод переопределит статичную переменную класса 
   <varname>MongoCursor::$slaveOkay</varname>. Также переопределит 
   <function>Mongo::setSlaveOkay</function>, 
   <function>MongoDB::setSlaveOkay</function> и
   <function>MongoCollection::setSlaveOkay</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>okay</parameter>
     </term>
     <listitem>
      <para>
       Если все в порядке, чтобы запросить вторичный сервер.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1> 

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Возвращает курсор.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдает исключение <classname>MongoCursorException</classname>, если этот курсор начал итерацию.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCursor::slaveOkay</function></title>
   <programlisting role="php">
<![CDATA[
<?php

MongoCursor::$slaveOkay = false;

// не можем запросить вторичный сервер
$cursor = $collection->find();

// можем запросить вторичный сервер
$cursor = $collection->find()->slaveOkay();

MongoCursor::$slaveOkay = true;

// можем запросить вторичный сервер
$cursor = $collection->find();

// не можем запросить вторичный сервер
$cursor = $collection->find()->slaveOkay(false);

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <simplelist>
   <member><xref linkend="mongo.readpreferences" /></member>
   <member><methodname>MongoCursor::setReadPreference</methodname></member>
   <member><methodname>MongoCursor::getReadPreference</methodname></member>
  </simplelist>
 </refsect1><!-- }}} -->

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>
        Метод устарел. Используйте вместо него 
        <methodname>MongoCursor::setReadPreference</methodname> 
        и <xref linkend="mongo.readpreferences" />.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
