<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.doquery" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::doQuery</refname>
  <refpurpose>Выполняет запрос</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>protected</modifier> <type>void</type><methodname>MongoCursor::doQuery</methodname>
   <void/>
  </methodsynopsis>
  <warning>
   <para>
    Пожалуйста, не используйте это.
   </para>
  </warning>
  <para>
   Эта функция фактически запрашивает базу данных. 
   Все запросы и команды проходят через эту функцию. 
   Таким образом, эта функция может быть переопределена 
   для обеспечения настраиваемой обработки запросов.
  </para>
  <para>
   Это позволяет сериализовать ваш запрос, отправить его в базу данных, 
   получить ответ и десериализовать его. Таким образом, если вы планируете переопределить это, 
   ваш код, вероятно, должен обратиться к оригиналу, 
   чтобы использовать существующую функциональность (смотрите пример использования ниже).
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;    
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &null;.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдает исключение <classname>MongoConnectionException</classname>,
   если не может подключиться к базе данных.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.2.11</entry>
       <entry>Выдает <constant>E_DEPRECATED</constant> при использовании.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="mongocursor.doquery.example.basic"><!-- {{{ -->
    <title>Пример использования <function>MongoCursor::doQuery</function></title>
    <para>
     Вы можете переопределить эту функцию, чтобы попытаться выполнить запрос 
     на вторичном сервере, и, если это не удастся, повторить попытку на основном.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

class MyCursor extends MongoCursor {

    protected function doQuery() {

        $this->slaveOkay();

        try {
            MongoCursor::doQuery();
        }
        catch(MongoCursorException $e) {
            $this->slaveOkay(false);
            MongoCursor::doQuery();
        }
    }
}

?>
]]>
    </programlisting>
   </example><!-- }}} -->
  </para>
 </refsect1><!-- }}} --> 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
