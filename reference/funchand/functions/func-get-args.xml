<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 350655 Maintainer: shein Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->
<refentry xml:id="function.func-get-args" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>func_get_args</refname>
  <refpurpose>Возвращает массив, содержащий аргументы функции</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>func_get_args</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Получает массив, содержащий аргументы функции.
  </para>
  <para>
   Эта функция может быть использована совместно с
   <function>func_num_args</function> и <function>func_get_arg</function>
   для создания функций с переменным количеством аргументов.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает массив, в котором каждый элемент является копией
   соответствующего члена списка аргументов пользовательской функции.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Генерирует предупреждение при вызове вне определения функции.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>func_get_args</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
    $numargs = func_num_args();
    echo "Количество аргументов: $numargs\n";
    if ($numargs >= 2) {
        echo "Второй аргумент: " . func_get_arg(1) . "\n";
    }
    $arg_list = func_get_args();
    for ($i = 0; $i < $numargs; $i++) {
        echo "Аргумент №$i: " . $arg_list[$i] . "\n";
    }
}

foo(1, 2, 3);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Количество аргументов: 3
Второй аргумент: 2
Аргумент №0: 1
Аргумент №1: 2
Аргумент №2: 3
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Использование <function>func_get_args</function> до и после
    PHP 5.3</title>
    <programlisting role="php">
<![CDATA[
test.php
<?php
function foo() {
    include './fga.inc';
}

foo('Первый аргумент', 'Второй аргумент');
?>

fga.inc
<?php

$args = func_get_args();
var_export($args);

?>
]]>
    </programlisting>
    <para>
     Вывод до PHP 5.3:
    </para>
    <screen>
<![CDATA[
array (
  0 => 'Первый аргумент',
  1 => 'Второй аргумент',
)
]]>
    </screen>
    <para>
     Вывод в PHP 5.3 и выше:
    </para>
    <screen>
<![CDATA[
Warning: func_get_args():  Called from the global scope - no function
context in /home/torben/Desktop/code/ml/fga.inc on line 3
false
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Пример передачи аргументов по ссылке и по значению с <function>func_get_args</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function byVal($arg) {
    echo 'Передан          : ', var_export(func_get_args()), PHP_EOL;
    $arg = 'baz';
    echo 'После изменения  : ', var_export(func_get_args()), PHP_EOL;
}

function byRef(&$arg) {
    echo 'Передан          : ', var_export(func_get_args()), PHP_EOL;
    $arg = 'baz';
    echo 'После изменения  : ', var_export(func_get_args()), PHP_EOL;
}

$arg = 'bar';
byVal($arg);
byRef($arg);
?>
]]>
    </programlisting>
     &example.outputs.7;
    <screen>
Передан          : array (
  0 => 'bar',
)
После изменения  : array (
  0 => 'baz',
)
Передан          : array (
  0 => 'bar',
)
После изменения  : array (
  0 => 'baz',
)
    </screen>
         &example.outputs.5;
    <screen>
Передан          : array (
  0 => 'bar',
)
После изменения  : array (
  0 => 'bar',
)
Передан          : array (
  0 => 'bar',
)
После изменения  : array (
  0 => 'baz',
)
    </screen>
   </example>
  </para>

 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.funcnoparam;
  &note.funcbyref;
  <note>
   <simpara>
    Эта функция возвращает только копии переданных аргументов,
    и не возвращает значения по умолчанию (непереданных) аргументов.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="functions.variable-arg-list.new">Синтаксис <literal>...</literal> в PHP 5.6+</link></member>
    <member><function>func_get_arg</function></member>
    <member><function>func_num_args</function></member>
    <member><methodname>ReflectionFunctionAbstract::getParameters</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
