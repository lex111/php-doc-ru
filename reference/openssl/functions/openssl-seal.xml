<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350655 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.openssl-seal">
 <refnamediv>
  <refname>openssl_seal</refname>
  <refpurpose>Запечатать (зашифровать) данные</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>openssl_seal</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">sealed_data</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">env_keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>pub_key_ids</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>method</parameter><initializer>"RC4"</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">iv</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_seal</function> запечатывает (шифрует)
   <parameter>data</parameter>, используя метод <parameter>method</parameter> 
   со сгенерированным случайно секретным ключем. Ключ будет зашифрован
   каждым открытым ключом, указанном в массиве <parameter>pub_key_ids</parameter>,
   и каждый зашифрованный ключ будет помещен в <parameter>env_keys</parameter>. 
   То есть вы можете разослать запечатанные данные сразу нескольким получателям.
   Каждый получатель должен получить как запечатанные данные, так и зашифрованный
   соответствующим открытым ключем ключ для их открытия.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Запечатываемые данные.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sealed_data</parameter></term>
     <listitem>
      <para>
       Запечатанные данные.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>env_keys</parameter></term>
     <listitem>
      <para>
       Массив зашифрованных ключей.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pub_key_ids</parameter></term>
     <listitem>
      <para>
       Массив идентификаторов открытых ключей.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>method</parameter></term>
     <listitem>
      <para>
       Метод шифрования.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       Инициализирующий вектор.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает длину запечатанных данных или &false;.
   В случае успеха в <parameter>sealed_data</parameter> будут содержаться
   запечатанные данные, а в <parameter>env_keys</parameter> зашифрованные ключи.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>openssl_seal</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// $data содержит данные для запечатывания

// извлекаем открытые ключи получателей и подготавливаем их
$fp = fopen("/src/openssl-0.9.6/demos/maurice/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk1 = openssl_get_publickey($cert);
// повторяем для второго получателя
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk2 = openssl_get_publickey($cert);

// задаем метод
$method = 'AES256';

// генерируем IV
$ivLength = openssl_cipher_iv_length( $method );
$iv = openssl_random_pseudo_bytes( $ivLength, $strong );
if (! $strong) {
 error_log('Инициализирующий вектор может быть не крипографически сильным!');
}

// запечатываем сообщение, только владельцы $pk1 и $pk2 смогут его распечатать,
// используя ключи $ekeys[0] и $ekeys[1] соответственно.
openssl_seal($data, $sealed, $ekeys, array($pk1, $pk2), $method, $iv);

// освобождаем ресурсы ключей
openssl_free_key($pk1);
openssl_free_key($pk2);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_open</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
