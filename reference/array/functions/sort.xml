<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 350645 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
<refentry xml:id="function.sort" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sort</refname>
  <refpurpose>Сортирует массив</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flags</parameter><initializer>SORT_REGULAR</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция сортирует массив. После завершения работы функции элементы
   массива будут расположены в порядке возрастания.
  </para>
  &note.sort-unstable;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Входной массив.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flags</parameter></term>
     <listitem>
      <para>
       Дополнительный второй параметр <parameter>sort_flags</parameter>
       можно использовать для изменения поведения сортировки,
       используя следующие значения:
      </para>
      <para>
       Флаги сортировки:
       <itemizedlist>
        <listitem>
         <simpara><constant>SORT_REGULAR</constant> - обычное сравнение элементов;
          подробности описаны в разделе <link linkend="language.operators.comparison">операторы сравнения</link></simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_NUMERIC</constant> - числовое сравнение элементов</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_STRING</constant> - строковое сравнение элементов</simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>SORT_LOCALE_STRING</constant> - сравнивает элементы как строки
          с учетом текущей локали. Используется локаль, которую можно изменять
          с помощью функции <function>setlocale</function>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>SORT_NATURAL</constant> - сравнение элементов как строк,
          используя естественное упорядочение, как в функции <function>natsort</function>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>SORT_FLAG_CASE</constant> - может быть объединен
          (побитовое ИЛИ) с
          <constant>SORT_STRING</constant> или
          <constant>SORT_NATURAL</constant> для сортировки строк без учета регистра.</simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>sort</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$fruits = array("lemon", "orange", "banana", "apple");
sort($fruits);
foreach ($fruits as $key => $val) {
    echo "fruits[" . $key . "] = " . $val . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
fruits[0] = apple
fruits[1] = banana
fruits[2] = lemon
fruits[3] = orange
]]>
    </screen>
   </example>
  </para>
  <para>
   Фрукты отсортированы в алфавитном порядке.
  </para>
  <para>
   <example>
    <title>Пример использования <function>sort</function> с регистронезависимым естественным
     упорядочением</title>
    <programlisting role="php">
<![CDATA[
<?php

$fruits = array(
    "Orange1", "orange2", "Orange3", "orange20"
);
sort($fruits, SORT_NATURAL | SORT_FLAG_CASE);
foreach ($fruits as $key => $val) {
    echo "fruits[" . $key . "] = " . $val . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
fruits[0] = Orange1
fruits[1] = orange2
fruits[2] = Orange3
fruits[3] = orange20
]]>
    </screen>
   </example>
  </para>
  <para>
   Фрукты были отсортированы аналогично функции <function>natcasesort</function>.
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.no-key-association;
  <note>
   <simpara>
    Как и большинство функций сортировки в PHP, <function>sort</function> использует
    реализацию алгоритма <link xlink:href="&url.wiki.quicksort;">быстрой сортировки</link>.
    Основной элемент выбирается из середины сортируемой части, достигая таким образом
    оптимального времени для уже отсортированных массивов. Следует иметь в виду,
    что это является деталью реализации и не следует на нее полагаться.
   </simpara>
  </note>
  <warning>
   <simpara>
    Будьте осторожны при сортировке массивов, содержащих элементы разных типов,
    так как в этом случае результат работы функции <function>sort</function>
    может быть неожиданным, если параметр <parameter>sort_flags</parameter> равен <constant>SORT_REGULAR</constant>.
   </simpara>
  </warning>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>asort</function></member>
    <member><function>rsort</function></member>
    <member>&seealso.array.sorting;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
