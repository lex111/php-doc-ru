<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 350871 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->
<section xml:id="ifx.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <note>
  <para>
   Убедитесь, что драйверу ifx доступны переменные окружения INFORMIXDIR и
   INFORMIXSERVER и что директория INFORMIX/bin включена в <envar>PATH</envar>. 
   Проверить можно запустив скрипт, содержащий команду <function>phpinfo</function>.
   В выводе <function>phpinfo</function> перечислены все установленые
   переменные окружения. Это работает и для CGI и для Apache mod_php. 
   Необходимо задать эти переменные в скрипте запуска Apache.
  </para>
  <para>
   Разделяемые библиотеки Informix также должны доступны загрузчику
   (проверьте LD_LIBRARY_PATH или ld.so.conf/ldconfig).
  </para>
 </note>
 <note>
  <title>
   Несколько замечаний по использованию BLOB (столбцы TEXT и BYTE)
  </title>
  <para>
   BLOB адресуются по своему идентификатору. Запросы типа SELECT
   возвращают "blob id" для столбцов  BYTE и TEXT. Контент данных полей
   можно получить с помощью "string_var = ifx_get_blob($blob_id);" если
   хотите сохранить его в памяти ("ifx_blobinfile(0);").  Если предпочитаете сохранить
   в файл, используйте "ifx_blobinfile(1);" и "ifx_get_blob($blob_id);", который вернет имя 
   файла. Для получения контента BLOB используйте обычные функции работы с файлами.
  </para>
  <para>
   Для запросов INSERT/UPDATE вам необходимо создать эти "blob id's"
   самостоятельно с помощью "<function>ifx_create_blob</function>;". После этого
   поместите BLOB в массив и замените в запросе соответствующие поля на знаки вопроса (?).
   Для запросов INSERT/UPDATE контент полей BLOB задается функцией
   <function>ifx_update_blob</function>.
  </para>
  <para>
   Поведение столбцов BLOB можно изменить с помощью параметров конфигурации,
   которые можно менять во время исполнения:
  </para>
  <para>
   переменная конфигурации: ifx.textasvarchar
  </para>
  <para>
   переменная конфигурации: ifx.byteasvarchar
  </para>
  <para>
   функции времени исполнения:
  </para>
  <para>
   ifx_textasvarchar(0): использовать идентификаторы BLOB для запросов SELECT с типом TEXT
  </para>
  <para>
   ifx_byteasvarchar(0): использовать идентификаторы BLOB для запросов SELECT с типом BYTE
  </para>
  <para>
   ifx_textasvarchar(1): возвращать столбцы TEXT как будто они типа VARCHAR. В данном
   случае необходимость в использовании идентификатора BLOB отпадает.
  </para>
  <para>
   ifx_byteasvarchar(1): возвращать столбцы BYTE как будто они типа VARCHAR. В данном
   случае необходимость в использовании идентификатора BLOB отпадает.
  </para>
  <para>
   переменная конфигурации: ifx.blobinfile
  </para>
  <para>
   функции времени исполнения:
  </para>
  <para>
   ifx_blobinfile_mode(0): сохранение столбцов BYTE в памяти, идентификатор BLOB 
   позволит получить их контент.
  </para>
  <para>
   ifx_blobinfile_mode(1): сохранение столбцов BYTE в файл, идентификатор BLOB 
   позволит получить имя файла.
  </para>
  <para>
   Если вы установите ifx_text/byteasvarchar равным 1, вы сможете использовать TEXT и BYTE
   в запросах SELECT как обычные (но очень длинные) поля VARCHAR.
   Подобное использование бинарно безопасно, так что можете смело пользоваться.
   Если возвращаемые данные содержат что-то странное, то вы сами несете
   полную ответственность за результаты.
  </para>
  <para>
   Если вы установили set ifx_blobinfile равным 1, используйте имя файла, возвращенное
   ifx_get_blob(..) для получения контента. Не забывайте УДАЛЯТЬ ВРЕМЕННЫЕ ФАЙЛЫ,
   СОЗДАННЫЕ INFORMIX для выгрузки BLOB. Каждая извлеченная строка создаст новый
   временный файл для каждого поля BYTE.
  </para>
  <para>
   Местоположение временных файлов определяется переменной окружения
   "blobdir" и по умолчанию равно "." (текущая директория).
   Что-то типа: putenv(blobdir=tmpblob"); сильно облегчит последующую очистку
   временной директории. Имена временных файлов начинаются с "blb".
  </para>
 </note>
 <note>
  <title>Автоматическое обрезание данных "char" (SQLCHAR и SQLNCHAR)</title>
  <para>
   Такое поведение можно задать переменной конфигурации
  </para>
  <para>
   ifx.charasvarchar: если установлено в 1, конечные пробельные символы будут автоматически
   обрезаны.
  </para>
 </note>
 <note>
  <title>Значения &null;</title>
  <para>
   Переменная конфигурации ifx.nullformat (и функция времени выполнения
   <function>ifx_nullformat</function>), установленная в &true;
   возвратит поля &null; как строку "&null;", если установлена в &false; - 
   вернет пустую строку. Эта настройка позволит различать пустые строки и  &null;.
  </para>
 </note>
 
 <para>
  <table>
   <title>Настройки конфигурации Informix</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.ifx.allow-persistent">ifx.allow_persistent</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.max-persistent">ifx.max_persistent</link></entry>
      <entry>"-1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.max-links">ifx.max_links</link></entry>
      <entry>"-1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.default-host">ifx.default_host</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.default-user">ifx.default_user</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.default-password">ifx.default_password</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.blobinfile">ifx.blobinfile</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.textasvarchar">ifx.textasvarchar</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.byteasvarchar">ifx.byteasvarchar</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.charasvarchar">ifx.charasvarchar</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.ifx.nullformat">ifx.nullformat</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Удалено в PHP 5.2.1.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
  <variablelist>
   <varlistentry xml:id="ini.ifx.allow-persistent">
    <term>
     <parameter>ifx.allow_persistent</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Разрешать или нет постоянные соединения Informix.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.ifx.max-persistent">
    <term>
     <parameter>ifx.max_persistent</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Максимальное количество постоянных соединений на процесс.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.ifx.max-links">
    <term>
     <parameter>ifx.max_links</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Максимальное количество соединений на процесс, включая постоянные.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.ifx.default-host">
    <term>
     <parameter>ifx.default_host</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Хост для соединения по умолчанию, если не задан в
      <function>ifx_connect</function> или
      <function>ifx_pconnect</function>.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.default-user">
   <term>
    <parameter>ifx.default_user</parameter>
    <type>string</type>
    </term>
    <listitem>
     <para>
      Пользователь по умолчанию, если не задан в
      <function>ifx_connect</function>
      <function>ifx_pconnect</function>.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.default-password">
   <term>
    <parameter>ifx.default_password</parameter>
    <type>string</type>
    </term>
    <listitem>
     <para>
      Пароль по умолчанию, если не задан в
      в <function>ifx_connect</function> или
      <function>ifx_pconnect</function>.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.blobinfile">
   <term>
    <parameter>ifx.blobinfile</parameter>
    <type>boolean</type>
    </term>
    <listitem>
     <para>
      Если хотите помещать поля BLOB в файл, установите в &true;.
      Если в память, то установите в &false;.
      Можно переопределить во время исполнения с функцией
      <function>ifx_blobinfile_mode</function>.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.textasvarchar">
   <term>
    <parameter>ifx.textasvarchar</parameter>
    <type>boolean</type>
    </term>
    <listitem>
     <para>
      Если хотите возвращать TEXT как обычную строку, установите в &true;.
      Если хотите получать идентификатор BLOB, установите в &false;.
      Можно переопределить во время исполнения с функцией
      <function>ifx_textasvarchar</function>.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.byteasvarchar">
   <term>
    <parameter>ifx.byteasvarchar</parameter>
    <type>boolean</type>
    </term>
    <listitem>
     <para>
      Если хотите возвращать BYTE как обычную строку, установите в &true;.
      Если хотите получать идентификатор BLOB, установите в &false;.
      Можно переопределить во время исполнения с функцией
      <function>ifx_textasvarchar</function>.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.charasvarchar">
   <term>
    <parameter>ifx.charasvarchar</parameter>
    <type>boolean</type>
    </term>
    <listitem>
     <para>
      Установите как &true;, если хотите обрезать конечные пробельные символы у CHAR.
     </para>
    </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.nullformat">
   <term>
    <parameter>ifx.nullformat</parameter>
    <type>boolean</type>
    </term>
    <listitem>
     <para>
      Если хотите получать &null; как строку "&null;" - установите в &true;. 
      Если хотите получать &null; как пустую строку - установите в &false;.
      Можно переопределить во время исполнения с функцией
      <function>ifx_nullformat</function>.
     </para>
    </listitem>
  </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

