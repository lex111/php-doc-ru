<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 351135 Maintainer: aur Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
<refentry xml:id='function.simplexml-load-file' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>simplexml_load_file</refname>
  <refpurpose>
   Интерпретирует XML-файл в объект
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>SimpleXMLElement</type><type>false</type></type><methodname>simplexml_load_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>class_name</parameter><initializer>"SimpleXMLElement"</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>ns</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Преобразует правильно сформированный XML-документ в указанном файле в объект.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Путь к XML-файлу
      </para>
      <note>
       <para>
        Libxml 2 декодирует  URI, так что если вы хотите передать, например,
        <literal>b&amp;c</literal> как параметр URI <literal>a</literal>,
        вы должны вызвать
        <literal>simplexml_load_file(rawurlencode('http://example.com/?a=' .
        urlencode('b&amp;c')))</literal>. Начиная с PHP 5.1.0 этого не требуется,
        потому что PHP сделает это за вас.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem>
      <para>
       Вы можете использовать этот необязательный параметр для того, чтобы функция
       <function>simplexml_load_file</function> возвращала объект 
       указанного класса. Этот класс должен расширять 
       класс <type>SimpleXMLElement</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Начиная с PHP 5.1.0 и Libxml 2.6.0, вы также можете использовать параметр
       <parameter>options</parameter>, чтобы указать <link
       linkend="libxml.constants">дополнительные параметры Libxml</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
       Префикс пространства имен или URI.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
       &true;, если <parameter>ns</parameter> является префиксом, и &false;, если URI;
       по умолчанию равен &false;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает объект (<type>object</type>) класса <type>SimpleXMLElement</type> со
   свойствами, содержащими данные, которые хранятся внутри XML-документа &return.falseforfailure;.
  </para>
  &return.falseproblem;
 </refsect1>
 
 <refsect1 role="errors"><!-- {{{ -->
  &reftitle.errors;
  <para>
   Генерирует сообщение об ошибке уровня <constant>E_WARNING</constant> для
   каждой ошибки, найденной в XML-данных.
  </para>
  <tip>
   <para>
    Используйте функцию <function>libxml_use_internal_errors</function> для того, чтобы
    подавить все ошибки XML, и функцию <function>libxml_get_errors</function>
    для прохода по ним впоследствии.
   </para>
  </tip>
 </refsect1><!-- }}} -->
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>
        Добавлен необязательный параметр <parameter>is_prefix</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Интерпретация XML-документа</title>
    <programlisting role="php">
<![CDATA[
<?php
// Файл test.xml содержит XML-документ с корневым элементом 
// и по меньшей мере элемент /[root]/title.

if (file_exists('test.xml')) {
    $xml = simplexml_load_file('test.xml');
 
    print_r($xml);
} else {
    exit('Не удалось открыть файл test.xml.');
}
?>
]]>
    </programlisting>
    <para>
     Этот скрипт выведет следующее в случае успешного завершения:
    </para>
    <screen>
<![CDATA[
SimpleXMLElement Object
(
  [title] => Пример заголовка
  ...
)
]]>
    </screen>
    <simpara>
     Здесь вы можете использовать <literal>$xml->body</literal>
     и любые другие элементы.
    </simpara>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>simplexml_load_string</function></member>
    <member><methodname>SimpleXMLElement::__construct</methodname></member>
    <member><xref linkend="simplexml.examples-errors" /></member>
    <member><function>libxml_use_internal_errors</function></member>
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
