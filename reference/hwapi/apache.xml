<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342988 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<!-- this file is renamed reference/hw/apache.xml with changed ID -->

<chapter xml:id="hwapi.apache-integration" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Интеграция с Apache</title>
 <para>
  Модуль Hyperwave лучше всего использовать, когда PHP скомпилирован как 
  модуль Apache. В таком случае базовый сервер Hyperwave может 
  быть почти полностью скрыт от пользователей, если Apache использует свой 
  механизм перезаписи. Следующие инструкции объяснят это.
 </para>
 <para>
  Поскольку PHP с поддержкой Hyperwave, встроенной в Apache, предназначен для 
  замены собственного решения Hyperwave на основе Wavemaster, мы 
  будем предполагать, что сервер Apache будет служить только 
  веб-интерфейсом Hyperwave в этих примеров. В этом нет необходимости, но упрощает 
  конфигурацию. Идея довольно проста. Прежде всего вам 
  нужен PHP-скрипт, который оценивает переменную <varname>$_ENV['PATH_INFO']</varname> 
  и обрабатывает ее значение как имя объекта Hyperwave. 
  Назовем этот скрипт <literal>'Hyperwave'</literal>. URL-адрес 
  <literal>http://your.hostname/Hyperwave/name_of_object</literal> 
  вернет объект Hyperwave с именем 
  <literal>'name_of_object'</literal>. В зависимости от типа объекта 
  скрипт должен реагировать соответствующим образом. Если это коллекция, она, вероятно, 
  вернет список дочерних элементов. Если это документ, он вернет mime-тип 
  и содержимое. Можно добиться небольшого улучшения, если использовать механизм 
  перезаписи Apache. С точки зрения пользователей было бы проще, если бы URL 
  <literal>http://your.hostname/name_of_object</literal> 
  возвращал бы объект. Правило перезаписи довольно простое:

  <informalexample>
   <programlisting role="apache-conf">
<![CDATA[
RewriteRule ^/(.*) /usr/local/apache/htdocs/HyperWave/$1 [L]
]]>
   </programlisting>
  </informalexample>

  Теперь любой URL-адрес относится к объекту на сервере Hyperwave. Из-за 
  этого возникает проблема: невозможно выполнить 
  отличный от 'Hyperwave' скрипт, например, для поиска. 
  Это можно исправить с помощью другого правила перезаписи, например 
  следующего:

  <informalexample>
   <programlisting role="apache-conf">
<![CDATA[
RewriteRule ^/hw/(.*) /usr/local/apache/htdocs/hw/$1 [L]
]]>
   </programlisting>
  </informalexample>

  Это зарезервирует каталог <filename>/usr/local/apache/htdocs/hw</filename> 
  для дополнительных скриптов и других файлов. Просто убедитесь, что это правило 
  определяется раньше, чем указанное выше. Есть небольшой недостаток: 
  все объекты Hyperwave, имя которых начинается с <literal>'hw/'</literal>, 
  будут затенены. Поэтому убедитесь, что вы не используете такие имена. Если вам нужно 
  больше каталогов, например, для изображений просто добавьте больше правил или поместите 
  их все в один каталог. Перед тем, как поставить эти инструкции, не забудьте 
  включить механизм перезаписи с помощью

  <informalexample>
   <programlisting role="apache-conf">
<![CDATA[
RewriteEngine on
]]>
   </programlisting>
  </informalexample>

  Вам понадобятся скрипты:

  <itemizedlist>
    <listitem>
     <simpara>
     вернуть сам объект
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     разрешить поиск
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     идентифицировать себя
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     установить свой профиль
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      по одному для каждой дополнительной функции, например, для отображения 
      атрибутов объекта, для отображения информации о пользователях, 
      для отображения статуса сервера и т.д.
     </simpara>
    </listitem>
  </itemizedlist>
 </para>
 <para>
  В качестве альтернативы механизму перезаписи вы также можете рассмотреть возможность использования 
  директивы Apache <literal>ErrorDocument</literal>, но имейте в виду, что перенаправленные 
  страницы <literal>ErrorDocument</literal> не могут получать POST-данные.
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

